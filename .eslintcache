[{"/Users/Justin/Desktop/collabochat/src/index.js":"1","/Users/Justin/Desktop/collabochat/src/reportWebVitals.js":"2","/Users/Justin/Desktop/collabochat/src/App.js":"3"},{"size":500,"mtime":1609022070000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609021932000,"results":"6","hashOfConfig":"5"},{"size":3610,"mtime":1609880727257,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1t7bp9u",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/Users/Justin/Desktop/collabochat/src/index.js",[],["17","18"],"/Users/Justin/Desktop/collabochat/src/reportWebVitals.js",[],["19","20"],"/Users/Justin/Desktop/collabochat/src/App.js",["21","22","23","24","25","26"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Helmet } from 'react-helmet'\n\nimport collaboC from './CollaboC.png'\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCt0AapeDmduiTedkzN7DFrkKWL6yUTBdg\",\n    authDomain: \"collabo-chat.firebaseapp.com\",\n    databaseURL: \"https://collabo-chat-default-rtdb.firebaseio.com\",\n    projectId: \"collabo-chat\",\n    storageBucket: \"collabo-chat.appspot.com\",\n    messagingSenderId: \"255596477659\",\n    appId: \"1:255596477659:web:78b061c06377cceaf220fe\",\n    measurementId: \"G-S17408XZXB\"\n})\n\ndocument.addEventListener(\"DOMContentLoaded\", event => {\n  const app = firebase.app();\n  const db = firebase.firestore();\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst TITLE = 'My Page Title'\n\nclass MyComponent extends React.PureComponent {\n  render () {\n    return (\n      <>                                \n        <Helmet>\n          <title>{ \"-Collabo1-\" }</title>\n        </Helmet>\n        ...\n      </>\n    )\n  }\n}\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Collabo</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Built for busy people.</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(2000);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      lumens: 0,\n      updatedAt: firebase.firestore.FieldValue.serverTimestamp()\n    })\n                                                                            \n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\nreturn (<>\n  <main>\n\n    {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n    <span ref={dummy}></span>\n\n  </main>\n\n  <form onSubmit={sendMessage}>\n\n    <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\" Be helpful \" />\n\n    <button type=\"submit\" disabled={!formValue}> <img src={collaboC} alt=\"Collabo\"/> </button>\n\n  </form>\n</>)\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, lumens } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{lumens}</p>\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"27","replacedBy":"31"},{"ruleId":"29","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":28,"column":9,"nodeType":"35","messageId":"36","endLine":28,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":29,"column":9,"nodeType":"35","messageId":"36","endLine":29,"endColumn":11},{"ruleId":"33","severity":1,"message":"38","line":34,"column":7,"nodeType":"35","messageId":"36","endLine":34,"endColumn":16},{"ruleId":"33","severity":1,"message":"39","line":36,"column":7,"nodeType":"35","messageId":"36","endLine":36,"endColumn":12},{"ruleId":"33","severity":1,"message":"40","line":38,"column":7,"nodeType":"35","messageId":"36","endLine":38,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":145,"column":7,"nodeType":"43","endLine":145,"endColumn":88},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","'db' is assigned a value but never used.","'analytics' is assigned a value but never used.","'TITLE' is assigned a value but never used.","'MyComponent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]