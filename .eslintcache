[{"/Users/Justin/Desktop/collabochat/src/index.js":"1","/Users/Justin/Desktop/collabochat/src/reportWebVitals.js":"2","/Users/Justin/Desktop/collabochat/src/App.js":"3"},{"size":500,"mtime":1609022070000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609021932000,"results":"6","hashOfConfig":"5"},{"size":3902,"mtime":1609711334879,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"abtx4z",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/Users/Justin/Desktop/collabochat/src/index.js",[],["17","18"],"/Users/Justin/Desktop/collabochat/src/reportWebVitals.js",[],["19","20"],"/Users/Justin/Desktop/collabochat/src/App.js",["21","22","23","24","25"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Helmet } from 'react-helmet'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCt0AapeDmduiTedkzN7DFrkKWL6yUTBdg\",\n    authDomain: \"collabo-chat.firebaseapp.com\",\n    databaseURL: \"https://collabo-chat-default-rtdb.firebaseio.com\",\n    projectId: \"collabo-chat\",\n    storageBucket: \"collabo-chat.appspot.com\",\n    messagingSenderId: \"255596477659\",\n    appId: \"1:255596477659:web:78b061c06377cceaf220fe\",\n    measurementId: \"G-S17408XZXB\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst TITLE = 'My Page Title'\n\nclass MyComponent extends React.PureComponent {\n  render () {\n    return (\n      <>\n        <Helmet>\n          <title>{ \"Collabo\" }</title>\n        </Helmet>\n        ...\n      </>\n    )\n  }\n}\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Collabo</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Built for busy people.</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  // const [lumenCounter, setLumenCounter] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      // lumens: lumenCounter\n    })\n\n    // setLumenCounter('');\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    {/* <button type=\"submit\" disabled= {!lumenCounter} THIS IS WHERE JUSTIN HAS TO MAKE BUTTON TO MAKE LUMEN UPDATE */}\n\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"/ Be helpful /\" />\n\n      <button type=\"submit\" disabled={!formValue}>https://www.google.com/imgres?imgurl=https%3A%2F%2Fhackr.io%2Ftutorials%2Fc%2Flogo-c.svg%3Fver%3D1553674176&imgrefurl=https%3A%2F%2Fhackr.io%2Ftutorials%2Flearn-c&tbnid=RuT3Qh5xTu7gOM&vet=12ahUKEwjciNDIx_7tAhXRC98KHdHLCDgQMygHegUIARCVAQ..i&docid=K29wdRhCC_tJoM&w=800&h=800&q=%20%20c&ved=2ahUKEwjciNDIx_7tAhXRC98KHdHLCDgQMygHegUIARCVAQ</button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL, lumens } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n\n      {/* <button onClick={(lumenCounter) => setLumenCounter(0)}>Give lumen</button>\n      <p>{lumens}</p> */}\n      <p>{text}</p>\n\n    </div>\n  </>)\n}\n\n\nexport default App;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":26,"column":7,"nodeType":"34","messageId":"35","endLine":26,"endColumn":16},{"ruleId":"32","severity":1,"message":"36","line":28,"column":7,"nodeType":"34","messageId":"35","endLine":28,"endColumn":12},{"ruleId":"32","severity":1,"message":"37","line":30,"column":7,"nodeType":"34","messageId":"35","endLine":30,"endColumn":18},{"ruleId":"32","severity":1,"message":"38","line":138,"column":32,"nodeType":"34","messageId":"35","endLine":138,"endColumn":38},{"ruleId":"39","severity":1,"message":"40","line":144,"column":7,"nodeType":"41","endLine":144,"endColumn":88},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],["42"],["43"],"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","'TITLE' is assigned a value but never used.","'MyComponent' is defined but never used.","'lumens' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]