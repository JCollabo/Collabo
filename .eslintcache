[{"/Users/Justin/Desktop/collabochat/src/index.js":"1","/Users/Justin/Desktop/collabochat/src/reportWebVitals.js":"2","/Users/Justin/Desktop/collabochat/src/App.js":"3","/Users/Justin/Desktop/collabochat/src/components/post.js":"4","/Users/Justin/Desktop/collabochat/src/components/vote-buttons.js":"5"},{"size":595,"mtime":1609903085018,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609021932000,"results":"8","hashOfConfig":"7"},{"size":4327,"mtime":1609946451193,"results":"9","hashOfConfig":"7"},{"size":422,"mtime":1609946013076,"results":"10","hashOfConfig":"7"},{"size":3575,"mtime":1609946013083,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1t7bp9u",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":4,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"/Users/Justin/Desktop/collabochat/src/index.js",[],["25","26"],"/Users/Justin/Desktop/collabochat/src/reportWebVitals.js",[],"/Users/Justin/Desktop/collabochat/src/App.js",["27"],"/Users/Justin/Desktop/collabochat/src/components/post.js",[],["28","29"],"/Users/Justin/Desktop/collabochat/src/components/vote-buttons.js",["30","31","32","33","34"],"import { IconButton, Text, VStack } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\n\nconst VoteButtons = ({ post }) => {\n  const [isVoting, setVoting] = useState(false);\n  const [votedmessage, setVotedMessage] = useState([]);\n\n  useEffect(() => {\n    // Fetch the previously voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\" and update the item on localStorage. Return \"true\" if the user has already voted the post.\n    const votesFromLocalStorage = localStorage.getItem(\"votes\") || [];\n    let previousVotes = [];\n\n    try {\n      // Parse the value of the item from localStorage. If the value of the\n      // items isn't an array, then JS will throw an error.\n      previousVotes = JSON.parse(votesFromLocalStorage);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setVotedMessage(previousVotes);\n  }, []);\n\n  const handleDisablingOfVoting = (postId) => {\n    // This function is responsible for disabling the voting button after a\n    // user has voted. Fetch the previously voted items from localStorage. See\n    // https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\"\n    // and update the item on localStorage.\n    const previousVotes = votedMessage;\n    previousVotes.push(postId);\n\n    setVotedMessage(previousVotes);\n\n    // Update the voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.stringify\" and update the item on localStorage.\n    localStorage.setItem(\"votes\", JSON.stringify(votedMessage));\n  };\n\n  const handleClick = async (type) => {\n    setVoting(true);\n\n    // Do calculation to save the vote.\n    let upVotesCount = post.upVotesCount;\n    let downVotesCount = post.downVotesCount;\n\n    const date = new Date();\n\n    if (type === \"upvote\") {\n      upVotesCount = upVotesCount + 1;\n    } else {\n      downVotesCount = downVotesCount + 1;\n    }\n\n    await firebase.firestore.collection(\"Message\").doc(post.id).set({\n      title: post.title,\n      upVotesCount,\n      downVotesCount,\n      createdAt: post.createdAt,\n      updatedAt: date.toUTCString(),\n    });\n\n    // Disable the voting button once the voting is successful.\n    handleDisablingOfVoting(post.id);\n\n    setVoting(false);\n  };\n\n  const checkIfPostIsAlreadyVoted = () => {\n    if (votedMessage.indexOf(post.id) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"purple\"\n          aria-label=\"Upvote\"\n          icon={<FiArrowUp />}\n          onClick={() => handleClick(\"upvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.upVotesCount}\n        </Text>\n      </VStack>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"yellow\"\n          aria-label=\"Downvote\"\n          icon={<FiArrowDown />}\n          onClick={() => handleClick(\"downvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.downVotesCount}\n        </Text>\n      </VStack>\n    </>\n  );\n};\n\nexport default VoteButtons;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":117,"column":10},{"ruleId":"35","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":10,"nodeType":"44","messageId":"45","endLine":7,"endColumn":22},{"ruleId":"46","severity":2,"message":"47","line":30,"column":27,"nodeType":"44","messageId":"48","endLine":30,"endColumn":39},{"ruleId":"46","severity":2,"message":"47","line":36,"column":50,"nodeType":"44","messageId":"48","endLine":36,"endColumn":62},{"ruleId":"46","severity":2,"message":"49","line":54,"column":11,"nodeType":"44","messageId":"48","endLine":54,"endColumn":19},{"ruleId":"46","severity":2,"message":"47","line":69,"column":9,"nodeType":"44","messageId":"48","endLine":69,"endColumn":21},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"Parsing error: Identifier 'messages' has already been declared\n\n\u001b[0m \u001b[90m 115 | \u001b[39m  }\u001b[0m\n\u001b[0m \u001b[90m 116 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 | \u001b[39m  \u001b[36mconst\u001b[39m [messages\u001b[33m,\u001b[39m setMessages] \u001b[33m=\u001b[39m useState([])\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 118 | \u001b[39m  \u001b[36mconst\u001b[39m [isLoading\u001b[33m,\u001b[39m setLoading] \u001b[33m=\u001b[39m useState(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 119 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 120 | \u001b[39m  useEffect(() \u001b[33m=>\u001b[39m {\u001b[0m",["50"],["51"],"no-unused-vars","'votedmessage' is assigned a value but never used.","Identifier","unusedVar","no-undef","'votedMessage' is not defined.","undef","'firebase' is not defined.","no-global-assign","no-unsafe-negation"]