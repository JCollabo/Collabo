[{"/Users/Justin/Desktop/collabochat/src/index.js":"1","/Users/Justin/Desktop/collabochat/src/reportWebVitals.js":"2","/Users/Justin/Desktop/collabochat/src/App.js":"3"},{"size":500,"mtime":1609022070000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609021932000,"results":"6","hashOfConfig":"5"},{"size":4828,"mtime":1609876471034,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1t7bp9u",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/Justin/Desktop/collabochat/src/index.js",[],["16","17"],"/Users/Justin/Desktop/collabochat/src/reportWebVitals.js",[],"/Users/Justin/Desktop/collabochat/src/App.js",["18"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Helmet } from 'react-helmet'\n\nimport collaboC from './CollaboC.png'\n\nimport VoteButtons from \"./vote-buttons\";\nimport { IconButton, Text, VStack } from \"@chakra-ui/core\";\nimport React, { useState } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\nimport db from \"../lib/firebase\";\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCt0AapeDmduiTedkzN7DFrkKWL6yUTBdg\",\n    authDomain: \"collabo-chat.firebaseapp.com\",\n    databaseURL: \"https://collabo-chat-default-rtdb.firebaseio.com\",\n    projectId: \"collabo-chat\",\n    storageBucket: \"collabo-chat.appspot.com\",\n    messagingSenderId: \"255596477659\",\n    appId: \"1:255596477659:web:78b061c06377cceaf220fe\",\n    measurementId: \"G-S17408XZXB\"\n})\n\ndocument.addEventListener(\"DOMContentLoaded\", event => {\n  const app = firebase.app();\n  const db = firebase.firestore();\n  const myLumens = db.collection('messages').doc('lumens')\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst TITLE = 'My Page Title'\n\nconst Post = ({ post }) => {\n  return (\n    <HStack key={post.id} w=\"100%\" alignItems=\"flex-start\">\n      <VoteButtons post={post} />\n      ...\n    </HStack>\n  );\n};\n\n\nclass MyComponent extends React.PureComponent {\n  render () {\n    return (\n      <>                                \n        <Helmet>\n          <title>{ \"-Collabo1-\" }</title>\n        </Helmet>\n        ...\n      </>\n    )\n  }\n}\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Collabo</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Built for busy people.</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const lumensRef = firestore.collection('lumens')\n  const query = messagesRef.orderBy('createdAt').limit(2000);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  const [lumenCounter, setLumenCounter] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      lumens: lumenCounter\n    })\n\n    setLumenCounter(0);                                                                                             /*setLumenCounter*/\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\" Be helpful \" />\n\n      <button type=\"submit\" disabled={!formValue}> <img src={collaboC} alt=\"Collabo\"/> </button>\n\n    </form>\n  </>)\n}\n\nconst VoteButtons = ({ message }) => {\n  const handleClick = async (type) => {\n    // Do calculation to save the vote.\n    let lumens= message.lumens;\n\n    const date = new Date();\n\n    if (type === \"upvote\") {\n      lumens = lumens + 1;\n    } \n    await db.collection(\"messages\").doc(post.id).set({\n      title: post.title,\n      lumens,\n      createdAt: post.createdAt,\n      updatedAt: date.toUTCString(),\n    });\n  };\n\n  return (\n    <>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"purple\"\n          aria-label=\"Lumen\"\n          icon={<FiArrowUp />}\n          onClick={() => handleClick(\"lumen\")}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.upVotesCount}\n        </Text>\n      </VStack>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"yellow\"\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.downVotesCount}\n        </Text>\n      </VStack>\n    </>\n  );\n};\n\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":null,"fatal":true,"severity":2,"message":"23","line":17,"column":8},"no-native-reassign",["24"],"no-negated-in-lhs",["25"],"Parsing error: Identifier 'React' has already been declared\n\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mVoteButtons\u001b[39m from \u001b[32m\"./vote-buttons\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[36mimport\u001b[39m { \u001b[33mIconButton\u001b[39m\u001b[33m,\u001b[39m \u001b[33mText\u001b[39m\u001b[33m,\u001b[39m \u001b[33mVStack\u001b[39m } from \u001b[32m\"@chakra-ui/core\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m,\u001b[39m { useState } from \u001b[32m\"react\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m\u001b[36mimport\u001b[39m { \u001b[33mFiArrowDown\u001b[39m\u001b[33m,\u001b[39m \u001b[33mFiArrowUp\u001b[39m } from \u001b[32m\"react-icons/fi\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[36mimport\u001b[39m db from \u001b[32m\"../lib/firebase\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]