[{"/Users/Justin/Desktop/collabochat/src/index.js":"1","/Users/Justin/Desktop/collabochat/src/reportWebVitals.js":"2","/Users/Justin/Desktop/collabochat/src/App.js":"3","/Users/Justin/Desktop/collabochat/src/components/post.js":"4","/Users/Justin/Desktop/collabochat/src/components/vote-buttons.js":"5"},{"size":595,"mtime":1609903085018,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609021932000,"results":"8","hashOfConfig":"7"},{"size":3799,"mtime":1609946013083,"results":"9","hashOfConfig":"7"},{"size":422,"mtime":1609946013076,"results":"10","hashOfConfig":"7"},{"size":3575,"mtime":1609946013083,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1t7bp9u",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":4,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":4,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},"/Users/Justin/Desktop/collabochat/src/index.js",[],["26","27"],"/Users/Justin/Desktop/collabochat/src/reportWebVitals.js",[],"/Users/Justin/Desktop/collabochat/src/App.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { Helmet } from 'react-helmet'\n\nimport collaboC from './CollaboC.png'\n\nimport { Container, Flex, Spinner, VStack } from \"@chakra-ui/core\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCt0AapeDmduiTedkzN7DFrkKWL6yUTBdg\",\n    authDomain: \"collabo-chat.firebaseapp.com\",\n    databaseURL: \"https://collabo-chat-default-rtdb.firebaseio.com\",\n    projectId: \"collabo-chat\",\n    storageBucket: \"collabo-chat.appspot.com\",\n    messagingSenderId: \"255596477659\",\n    appId: \"1:255596477659:web:78b061c06377cceaf220fe\",\n    measurementId: \"G-S17408XZXB\"\n})\n\ndocument.addEventListener(\"DOMContentLoaded\", event => {\n  const app = firebase.app();\n  const db = firebase.firestore();\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst TITLE = 'Collabo'\n\nclass MyComponent extends React.PureComponent {\n  render () {\n    return (\n      <>                                \n        <Helmet>\n          <title>{ \"Collabo\" }</title>\n        </Helmet>\n        ...\n      </>\n    )\n  }\n}\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Collabo</h1>\n        <SignOut />\n      </header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Built for busy people.</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(2000);\n\n  const [messages, setmessages] = useState([]);\n\n  const [formValue, setFormValue] = useState('');\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      upVotes: upVotesCount\n    })\n                                                                                \n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  useEffect(() => {\n    // Hook to handle the real-time updating of messages whenever there is a\n    // change in the datastore (https://firebase.google.com/docs/firestore/query-data/listen#view_changes_between_snapshots)\n\n    db.collection(\"messages\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((querySnapshot) => {\n        const _messages = [];\n\n        querySnapshot.forEach((doc) => {\n          _messages.push({\n            id: doc.id,\n            ...doc.data(),\n          });\n        });\n\n        setmessages(_messages);\n      });\n  }, []);\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\" Be helpful \" />\n\n      <button type=\"submit\" disabled={!formValue}> <img src={collaboC} alt=\"Collabo\"/> </button>\n\n    </form>\n  </>)\n}\n\nexport default App;","/Users/Justin/Desktop/collabochat/src/components/post.js",[],["43","44"],"/Users/Justin/Desktop/collabochat/src/components/vote-buttons.js",["45","46","47","48","49"],"import { IconButton, Text, VStack } from \"@chakra-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\n\nconst VoteButtons = ({ post }) => {\n  const [isVoting, setVoting] = useState(false);\n  const [votedmessage, setVotedMessage] = useState([]);\n\n  useEffect(() => {\n    // Fetch the previously voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\" and update the item on localStorage. Return \"true\" if the user has already voted the post.\n    const votesFromLocalStorage = localStorage.getItem(\"votes\") || [];\n    let previousVotes = [];\n\n    try {\n      // Parse the value of the item from localStorage. If the value of the\n      // items isn't an array, then JS will throw an error.\n      previousVotes = JSON.parse(votesFromLocalStorage);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setVotedMessage(previousVotes);\n  }, []);\n\n  const handleDisablingOfVoting = (postId) => {\n    // This function is responsible for disabling the voting button after a\n    // user has voted. Fetch the previously voted items from localStorage. See\n    // https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.parse\"\n    // and update the item on localStorage.\n    const previousVotes = votedMessage;\n    previousVotes.push(postId);\n\n    setVotedMessage(previousVotes);\n\n    // Update the voted items from localStorage. See https://stackoverflow.com/a/52607524/1928724 on why we need \"JSON.stringify\" and update the item on localStorage.\n    localStorage.setItem(\"votes\", JSON.stringify(votedMessage));\n  };\n\n  const handleClick = async (type) => {\n    setVoting(true);\n\n    // Do calculation to save the vote.\n    let upVotesCount = post.upVotesCount;\n    let downVotesCount = post.downVotesCount;\n\n    const date = new Date();\n\n    if (type === \"upvote\") {\n      upVotesCount = upVotesCount + 1;\n    } else {\n      downVotesCount = downVotesCount + 1;\n    }\n\n    await firebase.firestore.collection(\"Message\").doc(post.id).set({\n      title: post.title,\n      upVotesCount,\n      downVotesCount,\n      createdAt: post.createdAt,\n      updatedAt: date.toUTCString(),\n    });\n\n    // Disable the voting button once the voting is successful.\n    handleDisablingOfVoting(post.id);\n\n    setVoting(false);\n  };\n\n  const checkIfPostIsAlreadyVoted = () => {\n    if (votedMessage.indexOf(post.id) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"purple\"\n          aria-label=\"Upvote\"\n          icon={<FiArrowUp />}\n          onClick={() => handleClick(\"upvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.upVotesCount}\n        </Text>\n      </VStack>\n      <VStack>\n        <IconButton\n          size=\"lg\"\n          colorScheme=\"yellow\"\n          aria-label=\"Downvote\"\n          icon={<FiArrowDown />}\n          onClick={() => handleClick(\"downvote\")}\n          isLoading={isVoting}\n          isDisabled={checkIfPostIsAlreadyVoted()}\n        />\n        <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n          {post.downVotesCount}\n        </Text>\n      </VStack>\n    </>\n  );\n};\n\nexport default VoteButtons;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":10,"nodeType":"56","messageId":"57","endLine":10,"endColumn":27},{"ruleId":"54","severity":1,"message":"58","line":15,"column":10,"nodeType":"56","messageId":"57","endLine":15,"endColumn":19},{"ruleId":"54","severity":1,"message":"59","line":15,"column":21,"nodeType":"56","messageId":"57","endLine":15,"endColumn":25},{"ruleId":"54","severity":1,"message":"60","line":15,"column":27,"nodeType":"56","messageId":"57","endLine":15,"endColumn":34},{"ruleId":"54","severity":1,"message":"61","line":15,"column":36,"nodeType":"56","messageId":"57","endLine":15,"endColumn":42},{"ruleId":"54","severity":1,"message":"62","line":29,"column":9,"nodeType":"56","messageId":"57","endLine":29,"endColumn":12},{"ruleId":"54","severity":1,"message":"63","line":30,"column":9,"nodeType":"56","messageId":"57","endLine":30,"endColumn":11},{"ruleId":"54","severity":1,"message":"64","line":35,"column":7,"nodeType":"56","messageId":"57","endLine":35,"endColumn":16},{"ruleId":"54","severity":1,"message":"65","line":37,"column":7,"nodeType":"56","messageId":"57","endLine":37,"endColumn":12},{"ruleId":"54","severity":1,"message":"66","line":39,"column":7,"nodeType":"56","messageId":"57","endLine":39,"endColumn":18},{"ruleId":"54","severity":1,"message":"67","line":95,"column":9,"nodeType":"56","messageId":"57","endLine":95,"endColumn":14},{"ruleId":"68","severity":2,"message":"69","line":110,"column":16,"nodeType":"56","messageId":"70","endLine":110,"endColumn":28},{"ruleId":"68","severity":2,"message":"71","line":117,"column":3,"nodeType":"56","messageId":"70","endLine":117,"endColumn":12},{"ruleId":"68","severity":2,"message":"72","line":121,"column":5,"nodeType":"56","messageId":"70","endLine":121,"endColumn":7},{"ruleId":"73","severity":2,"message":"74","line":140,"column":41,"nodeType":"75","endLine":140,"endColumn":52},{"ruleId":"50","replacedBy":"76"},{"ruleId":"52","replacedBy":"77"},{"ruleId":"54","severity":1,"message":"78","line":7,"column":10,"nodeType":"56","messageId":"57","endLine":7,"endColumn":22},{"ruleId":"68","severity":2,"message":"79","line":30,"column":27,"nodeType":"56","messageId":"70","endLine":30,"endColumn":39},{"ruleId":"68","severity":2,"message":"79","line":36,"column":50,"nodeType":"56","messageId":"70","endLine":36,"endColumn":62},{"ruleId":"68","severity":2,"message":"80","line":54,"column":11,"nodeType":"56","messageId":"70","endLine":54,"endColumn":19},{"ruleId":"68","severity":2,"message":"79","line":69,"column":9,"nodeType":"56","messageId":"70","endLine":69,"endColumn":21},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useCollectionData' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Flex' is defined but never used.","'Spinner' is defined but never used.","'VStack' is defined but never used.","'app' is assigned a value but never used.","'db' is assigned a value but never used.","'analytics' is assigned a value but never used.","'TITLE' is assigned a value but never used.","'MyComponent' is defined but never used.","'query' is assigned a value but never used.","no-undef","'upVotesCount' is not defined.","undef","'useEffect' is not defined.","'db' is not defined.","react/jsx-no-undef","'ChatMessage' is not defined.","JSXIdentifier",["81"],["82"],"'votedmessage' is assigned a value but never used.","'votedMessage' is not defined.","'firebase' is not defined.","no-global-assign","no-unsafe-negation"]